% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lme_model.R
\name{lme_model}
\alias{lme_model}
\title{Linear Mixed Effect Model}
\usage{
lme_model(
  data,
  model = NULL,
  response_variable,
  random_effect_factors,
  non_random_effect_factors = NULL,
  two_way_interaction_factor = NULL,
  three_way_interaction_factor = NULL,
  id,
  estimation_method = "REML",
  opt_control = "optim",
  na.action = stats::na.exclude,
  use_package = "nlme",
  quite = F,
  ...
)
}
\arguments{
\item{data}{data frame}

\item{model}{lme4 model syntax. Support more complicated model. Note that model_summary will only return fixed effect estimates.}

\item{response_variable}{DV (i.e., outcome variable / response variable). Length of 1. Support \code{dplyr::select} syntax.}

\item{random_effect_factors}{random effect factors (level-1 variable for HLM people) Factors that need to estimate fixed effect and random effect (i.e., random slope / varying slope based on the id). Support \code{dplyr::select} syntax.}

\item{non_random_effect_factors}{non-random effect factors (level-2 variable for HLM people). Factors only need to estimate fixed effect. Support \code{dplyr::select} syntax.}

\item{two_way_interaction_factor}{two-way interaction factors. You need to pass 2+ factor. Support \code{dplyr::select} syntax.}

\item{three_way_interaction_factor}{three-way interaction factor. You need to pass exactly 3 factors. Specifying three-way interaction factors automatically included all two-way interactions, so please do not specify the two_way_interaction_factor argument. Support \code{dplyr::select} syntax.}

\item{id}{the nesting variable (e.g. group, time). Length of 1. Support \code{dplyr::select} syntax.}

\item{estimation_method}{character. \code{ML} or \code{REML} default to \code{REML}.}

\item{opt_control}{default is \code{optim} for \code{lme} and \code{bobyqa} for lmerTest}

\item{na.action}{default is \code{stats::na.exclude}. Required to be \code{stats::na.omit} if check_assumption if \code{T}.}

\item{use_package}{Default is \code{nlme}. Only available for linear mixed effect model. Options are \code{nlme} or \code{lmerTest},\code{lme4}(\verb{'lme4} return similiar result as \code{lmerTest} except the return model)}

\item{quite}{default to \code{F}. If set to \code{T}, it will not print the fitting model statement}

\item{...}{Internal use only. It doesn't work in other cases}
}
\value{
An object of class \code{lme} of \code{lmerModLmerTest} representing the linear mixed-effects model fit.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}} \cr
Compute a linear mixed effect model (i.e., hierarchical linear model, multilevel linear model) using the \code{nlme::lme} (Pinheiro, 2006)  or the \code{lmerTest::lmer} (Kuznetsova, 2017) function. The model support all dplyr::select syntax (see \code{?dplyr::select} or \verb{vignette('mixed_effect_model)} for detailed description). It will also automatically remove the response variable and id from other variables (see details below for an example). It currently only support two-level model. More complicated model structure is supported by passing the \code{model} argument.
}
\examples{
# two-level model with level-1 and level-2 variable with random intercept and random slope
fit1 <- lme_model(
  response_variable = JS_Individual,
  random_effect_factors = Age_Individual,
  non_random_effect_factors = contains("Country"),
  id = Country,
  data = EWCS_2015_shorten,
)
# added two-way interaction factor
fit2 <- lme_model(
  response_variable = JS_Individual,
  random_effect_factors = Age_Individual,
  non_random_effect_factors = contains("Country"),
  two_way_interaction_factor = c("Age_Individual", "Hofstede_IC_Country"),
  id = Country,
  data = EWCS_2015_shorten
)
\donttest{
# fit3 is equivalent to fit4
fit3 <- lme_model(
  response_variable = JS_Individual,
  random_effect_factors = c(contains("Individual"), -JS_Individual), # !look at the difference here
  non_random_effect_factors = contains("Country"),
  id = Country,
  data = EWCS_2015_shorten
)
}
# Equivalent to the above example.
# It shows that you don't need to remove response_variable from tidyselect syntax.
\donttest{
fit4 <- lme_model(
  response_variable = JS_Individual,
  random_effect_factors = contains("Individual"), # !look at the difference here
  non_random_effect_factors = contains("Country"),
  id = Country,
  data = EWCS_2015_shorten
)
}

}
\references{
Kuznetsova, A., Brockhoff, P. B., & Christensen, R. H. (2017). lmerTest package: tests in linear mixed effects models. Journal of statistical software, 82(13), 1-26.

Moy, J. H. (2021). psycModel: Integrated Toolkit for Psychological Analysis and Modeling in R. R package. https://github.com/jasonmoy28/psycModel

Pinheiro, J., Bates, D., DebRoy, S., Sarkar, D., & Team, R. C. (2006). nlme: Linear and nonlinear mixed effects models. R package version, 3(4), 109.
}
