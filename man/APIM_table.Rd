% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apim_table.R
\name{APIM_table}
\alias{APIM_table}
\title{APIM Actor-Partner Interdependence Model Table with Multiple Moderators}
\usage{
APIM_table(
  data,
  predictor_a,
  predictor_p,
  outcome_a,
  outcome_p,
  mod_a = NULL,
  mod_p = NULL,
  mod_type = "mod",
  return_result = FALSE
)
}
\arguments{
\item{data}{data frame object}

\item{predictor_a}{predictor variable name for actor}

\item{predictor_p}{predictor variable name for partner}

\item{outcome_a}{dependent variable name for actor}

\item{outcome_p}{dependent variable name for partner}

\item{mod_a}{moderation variable name for actor. Support \code{dplyr::select()} syntax.}

\item{mod_p}{moderation variable name for partner. Support \code{dplyr::select()} syntax.}

\item{mod_type}{only 'mod' is supported for now}

\item{return_result}{return \code{lavaan::parameterestimates()}. Default is \code{FALSE}}
}
\value{
data.frame of the APIM table
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}} \cr
Actor-partner interdependence model that test multiple moderators simultaneously.
}
\examples{
APIM_table(data = acitelli,
           predictor_a = 'Tension_A',
           predictor_p = 'Tension_P',
           outcome_a = 'Satisfaction_A',
           outcome_p = 'Satisfaction_P',
           mod_a = c('SelfPos_A','OtherPos_A','SimHob_A'),
           mod_p = c('SelfPos_P','OtherPos_P','SimHob_P'))

}
