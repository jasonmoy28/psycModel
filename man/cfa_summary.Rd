% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cfa_summary.R
\name{cfa_summary}
\alias{cfa_summary}
\title{Confirmatory Factor Analysis}
\usage{
cfa_summary(
  data,
  ...,
  model = NULL,
  group = NULL,
  summary_item = c("cfi", "rmsea", "tli", "srmr"),
  ordered = F,
  return_result = "model",
  quite = F,
  group_partial = NULL
)
}
\arguments{
\item{data}{data frame}

\item{...}{CFA items. Multi-factor CFA items should be separated by comma (as different argument).}

\item{model}{explicit lavaan model. Must be specify with \code{model = lavaan_model_syntax}.}

\item{group}{optional character. used for multi-level CFA. the nested variable for multilevel dataset (e.g., Country)}

\item{summary_item}{vector of fit indices. Default is CFI, RMSEA, TLI, and SRMR.}

\item{ordered}{logical. default is F. If it is set to T, lavaan will treat it as a ordinal variable and use DWLS instead of ML}

\item{return_result}{Default is model. Options are 'model' (lavaan model), 'short_summary' (fit index summary only), 'long_summary' (lavaan full summary).}

\item{quite}{default as F. If set to true, it will not print the running model statement.}

\item{group_partial}{Items for partial equivalence. The form should be c('DV =~ item1', 'DV =~ item2').}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}} \cr
The function fits a CFA model using the lavaan::cfa (Rosseel, 2012) function. Users can fit single and multiple factors CFA (read details), and it also supports multilevel CFA (specifying the group). Users can pass the items (see below for example) or an explicit lavaan model for more versatile usage.
}
\details{
All argument must be explicitly specified. If not, all arguments will be treated as CFA items.
}
\examples{

# Fitting a single factor CFA model
cfa_summary(
  data = lavaan::HolzingerSwineford1939,
  x1:x3
)

# Fitting a multilevel single factor CFA model
cfa_summary(
  data = lavaan::HolzingerSwineford1939,
  x1:x3,
  group = "sex"
)

# Fitting a multiple factor CFA model
cfa_summary(
  data = lavaan::HolzingerSwineford1939,
  x1:x3,
  x4:x6,
  x7:x9
)

# Fitting a CFA model by passing explicit lavaan model (equivalent to the above model)
# Note in the below function how I added `model = ` in front of the lavaan model.
# Similarly, the same rule apply for all arguments (e.g., `ordered = F` instead of `F`)
cfa_summary(
  model = "visual  =~ x1 + x2 + x3
                     textual =~ x4 + x5 + x6
                     speed   =~ x7 + x8 + x9 ",
  data = lavaan::HolzingerSwineford1939
)
\dontrun{
# This will fail because I did not add `model = ` in front of the lavaan model.
# Therefore,you must add the tag in front of all arguments
# For example, `return_result = 'model'` instaed of `model`
cfa_summary("visual  =~ x1 + x2 + x3
             textual =~ x4 + x5 + x6
             speed   =~ x7 + x8 + x9 ",
  data = lavaan::HolzingerSwineford1939
)
}
}
\references{
Bao, H.-W.-S. (2021). bruceR: Broadly useful convenient and efficient R functions. R package version 0.6.0. https://CRAN.R-project.org/package=bruceR

Moy, J. H. (2021). psycModel: Integrated Toolkit for Psychological Analysis and Modeling in R. R package. https://github.com/jasonmoy28/psycModel

Rosseel Y (2012). lavaan: An R Package for Structural Equation Modeling. Journal of Statistical Software, 48(2), 1â€“36. https://www.jstatsoft.org/v48/i02/.
}
